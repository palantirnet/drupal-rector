parameters:
	ignoreErrors:
		-
			message: '#^Access to undefined constant Rector\\Symfony\\Set\\TwigSetList\:\:TWIG_240\.$#'
			identifier: classConstant.notFound
			count: 1
			path: config/drupal-10/drupal-10.0-deprecations.php

		-
			message: '#^Access to undefined constant Rector\\Symfony\\Set\\TwigSetList\:\:TWIG_240\.$#'
			identifier: classConstant.notFound
			count: 1
			path: config/drupal-9/drupal-9.0-deprecations.php

		-
			message: '''
				#^Call to deprecated method locateRoot\(\) of class DrupalFinder\\DrupalFinder\:
				Will be removed in v2\. Future usage should instantiate
				  a new DrupalFinder object by passing the starting path to its
				  constructor\.$#
			'''
			identifier: method.deprecated
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_contrib_extension_directory_roots\(\) return type has no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_find_extension_directories\(\) return type has no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_get_extension_namespaces\(\) has parameter \$dirs with no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_get_extension_namespaces\(\) return type has no value type specified in iterable type array\.$#'
			identifier: missingType.iterableValue
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_populate_class_loader\(\) has no return type specified\.$#'
			identifier: missingType.return
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_populate_class_loader\(\) has parameter \$drupalRoot with no type specified\.$#'
			identifier: missingType.parameter
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '#^Function drupal_phpunit_populate_class_loader\(\) has parameter \$vendorRoot with no type specified\.$#'
			identifier: missingType.parameter
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '''
				#^Instantiation of deprecated class DrupalFinder\\DrupalFinder\:
				in drupal\-finder\:1\.3\.0 and is removed from drupal\-finder\:2\.0\.0\.
				  Use \\DrupalFinder\\DrupalFinderComposerRuntime instead\.$#
			'''
			identifier: new.deprecated
			count: 1
			path: config/drupal-phpunit-bootstrap-file.php

		-
			message: '''
				#^Call to deprecated method locateRoot\(\) of class DrupalFinder\\DrupalFinder\:
				Will be removed in v2\. Future usage should instantiate
				  a new DrupalFinder object by passing the starting path to its
				  constructor\.$#
			'''
			identifier: method.deprecated
			count: 1
			path: rector.php

		-
			message: '''
				#^Instantiation of deprecated class DrupalFinder\\DrupalFinder\:
				in drupal\-finder\:1\.3\.0 and is removed from drupal\-finder\:2\.0\.0\.
				  Use \\DrupalFinder\\DrupalFinderComposerRuntime instead\.$#
			'''
			identifier: new.deprecated
			count: 1
			path: rector.php

		-
			message: '#^Access to an undefined property PhpParser\\Node\\Expr\:\:\$value\.$#'
			identifier: property.notFound
			count: 2
			path: src/Drupal8/Rector/Deprecation/DBRector.php

		-
			message: '#^Call to an undefined method PHPStan\\Type\\Type\:\:getValue\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: src/Drupal8/Rector/Deprecation/DrupalSetMessageRector.php

		-
			message: '#^Access to an undefined property PhpParser\\Node\\Expr\:\:\$expr\.$#'
			identifier: property.notFound
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityLoadRector.php

		-
			message: '#^Access to an undefined property PhpParser\\Node\\Expr\:\:\$expr\.$#'
			identifier: property.notFound
			count: 2
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Access to an undefined property PhpParser\\Node\\Expr\:\:\$name\.$#'
			identifier: property.notFound
			count: 3
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Method DrupalRector\\Drupal8\\Rector\\Deprecation\\EntityManagerRector\:\:getServiceByMethodName\(\) has no return type specified\.$#'
			identifier: missingType.return
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^PHPDoc tag @param references unknown parameter\: \$node$#'
			identifier: parameter.notFound
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Parameter \#1 \$assign of method DrupalRector\\Drupal8\\Rector\\Deprecation\\EntityManagerRector\:\:findInstanceByNameInAssign\(\) expects PhpParser\\Node\\Expr\\Assign, PhpParser\\Node\\Expr given\.$#'
			identifier: argument.type
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Parameter \#1 \$assign of method DrupalRector\\Drupal8\\Rector\\Deprecation\\EntityManagerRector\:\:replaceInstanceByNameInAssign\(\) expects PhpParser\\Node\\Expr\\Assign, PhpParser\\Node\\Expr given\.$#'
			identifier: argument.type
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Parameter \#1 \$expr of method DrupalRector\\Drupal8\\Rector\\Deprecation\\EntityManagerRector\:\:refactorExpression\(\) expects PhpParser\\Node\\Expr\\MethodCall\|PhpParser\\Node\\Expr\\StaticCall, PhpParser\\Node given\.$#'
			identifier: argument.type
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Parameter \#1 \$expr of method DrupalRector\\Drupal8\\Rector\\Deprecation\\EntityManagerRector\:\:refactorExpression\(\) expects PhpParser\\Node\\Expr\\MethodCall\|PhpParser\\Node\\Expr\\StaticCall, PhpParser\\Node\\Expr given\.$#'
			identifier: argument.type
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Property PhpParser\\Node\\Expr\\Assign\:\:\$expr \(PhpParser\\Node\\Expr\) does not accept PhpParser\\Node\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Drupal8/Rector/Deprecation/EntityManagerRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpPropertyReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal8/Rector/Deprecation/FunctionalTestDefaultThemePropertyRector.php

		-
			message: '#^Calling PHPStan\\Php\\PhpVersionFactory\:\:create\(\) is not covered by backward compatibility promise\. The method might change in a minor PHPStan version\.$#'
			identifier: phpstanApi.method
			count: 1
			path: src/Drupal8/Rector/Deprecation/FunctionalTestDefaultThemePropertyRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/AssertLegacyTraitRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/AssertNoFieldByNameRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/AssertNoUniqueTextRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/ConstructFieldXpathRector.php

		-
			message: '#^Call to an undefined method PHPStan\\Type\\Type\:\:getValue\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: src/Drupal9/Rector/Deprecation/ExtensionPathRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/FromUriRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/GetAllOptionsRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/GetRawContentRector.php

		-
			message: '#^Although PHPStan\\Reflection\\Php\\PhpMethodReflection is covered by backward compatibility promise, this instanceof assumption might break because it''s not guaranteed to always stay the same\.$#'
			identifier: phpstanApi.instanceofAssumption
			count: 1
			path: src/Drupal9/Rector/Deprecation/PassRector.php

		-
			message: '#^Parameter \#3 \$args of method Rector\\PhpParser\\Node\\NodeFactory\:\:createStaticCall\(\) expects array\<PhpParser\\Node\>, array\<int, PhpParser\\Node\\Expr\\ArrowFunction\|PhpParser\\Node\\Expr\\ClassConstFetch\|string\> given\.$#'
			identifier: argument.type
			count: 1
			path: src/Rector/AbstractDrupalCoreRector.php
